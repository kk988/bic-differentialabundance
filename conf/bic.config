
manifest.version = '1.5.0_bic_1.0.0'

plugins {
    id 'nf-co2footprint@1.0.0-beta' // carbon footprint plugin
}


params {
    publish_dir_mode = 'copy'
    exploratory_main_variable = 'contrasts'
}

// JOB OUTPUT info

process {
    withName: DESEQ2_NORM {
        ext.prefix = { "${meta.variable}" }
    }

    withName: '.*:BIC_PLOTS:CREATE_SAMPLE_KEY' {
        publishDir = [
                enabled: false
            ]
    }

    withName: '.*:BIC_PLOTS:CREATE_GENE_MAP' {
        publishDir = [
                enabled: false
            ]
    }

    withName: '.*:BIC_PLOTS:HEATMAP' {
        publishDir = [
            [
                path: { "${params.outdir}/plots/differential" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: '.*:BIC_PLOTS:SAMPLE_TO_SAMPLE_DISTANCE' {
        publishDir = [
            [
                path: { "${params.outdir}/plots/exploratory" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: '.*:BIC_PLOTS:MDS_CLUSTERING' {
        publishDir = [
            [
                path: { "${params.outdir}/plots/exploratory" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: '.*:BIC_PLOTS:PC_LOADING' {
        publishDir = [
            [
                path: { "${params.outdir}/plots/exploratory" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }

    withName: GSEA_GSEA_PRERANKED {
        ext.prefix = { "${meta.id}.${gene_sets.baseName}." }
        publishDir = [
            [
                path: { "${params.outdir}/report/gsea/${meta.id}/${gene_sets.baseName}" },
                mode: params.publish_dir_mode,
                pattern: '*.{html,zip,png,tsv,rpt}'
            ]
        ]
    }

    withName: PREFORMAT_INPUT {
        publishDir = [
            enabled: false
        ]
    }

    withName: MOVE_INPUT_FILES {
        publishDir = [
            [
                path: { "${params.outdir}/project_files"},
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
}
